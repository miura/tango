
package tango.gui.util;

import java.awt.Dimension;
import javax.swing.BorderFactory;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import tango.gui.Core;
import tango.gui.PanelDisplayer;
/**
 *
 **
 * /**
 * Copyright (C) 2012 Jean Ollion
 *
 *
 *
 * This file is part of tango
 *
 * tango is free software; you can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation; either version 3 of the License, or (at your option) any later
 * version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program. If not, see <http://www.gnu.org/licenses/>.
 *
 * @author Jean Ollion
 */

public class ProcessingSequenceManagerLayout extends javax.swing.JPanel implements PanelDisplayer {
    public Dimension controlDim, editDim, preFilterDim, postFilterDim, segDim;
    Core core;
    public ProcessingSequenceManagerLayout(Core core, String controlTitle)  {
        this.core=core;
        initComponents();
        preFilterDim = new Dimension(this.preFilterPanel.getPreferredSize().width-15, this.preFilterPanel.getPreferredSize().height-15);
        postFilterDim = new Dimension(this.postFilterPanel.getPreferredSize().width-15, this.postFilterPanel.getPreferredSize().height-15);
        segDim = new Dimension(this.segmentationPanel.getPreferredSize().width-15, this.segmentationPanel.getPreferredSize().height-15);
        controlDim = new Dimension(this.controlPanel.getPreferredSize().width-10, this.controlPanel.getPreferredSize().height-15);
        editDim = new Dimension(this.editPanel.getPreferredSize().width-15, this.editPanel.getPreferredSize().height-15);
        this.controlPanel.setBorder(BorderFactory.createTitledBorder(controlTitle));
    }
    
    
    @Override
    public void showPanel(JPanel panel) {
        hidePanel();
        this.editScroll.setViewportView(panel);
        panel.setMinimumSize(editPanel.getMinimumSize());
        refreshDisplay();
    }

    @Override
    public void hidePanel() {
        this.editScroll.setViewportView(editPanel);
        refreshDisplay();
    }

    @Override
    public void refreshDisplay() {
        this.editScroll.repaint();
        this.editScroll.revalidate();
        this.editPanel.repaint();
        this.editPanel.revalidate();
        core.refreshDisplay();
    }
    
    public void hideListPanels() {
        this.preFilterScroll.setViewportView(preFilterPanel);
        this.segmentationScoll.setViewportView(segmentationPanel);
        this.postFilterScroll.setViewportView(postFilterPanel);
        refreshListPanels();
    }
    
    public void showListPanels(JPanel prefilter, JPanel segmentation, JPanel postfilter) {
        hideListPanels();
        prefilter.setMinimumSize(preFilterPanel.getMinimumSize());
        this.preFilterScroll.setViewportView(prefilter);
        segmentation.setMinimumSize(segmentationPanel.getMinimumSize());
        this.segmentationScoll.setViewportView(segmentation);
        postfilter.setMinimumSize(postFilterPanel.getMinimumSize());
        this.postFilterScroll.setViewportView(postfilter);
        refreshListPanels();
    }
    
    public void refreshListPanels() {
        this.preFilterScroll.repaint();
        this.preFilterScroll.revalidate();
        this.segmentationScoll.repaint();
        this.segmentationScoll.revalidate();
        this.postFilterScroll.repaint();
        this.postFilterScroll.revalidate();
        core.refreshDisplay();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        controlPanel = new javax.swing.JPanel();
        preFilterScroll = new javax.swing.JScrollPane();
        preFilterPanel = new javax.swing.JPanel();
        segmentationScoll = new javax.swing.JScrollPane();
        segmentationPanel = new javax.swing.JPanel();
        postFilterScroll = new javax.swing.JScrollPane();
        postFilterPanel = new javax.swing.JPanel();
        editScroll = new javax.swing.JScrollPane();
        editPanel = new javax.swing.JPanel();

        setMaximumSize(new java.awt.Dimension(1024, 600));
        setMinimumSize(new java.awt.Dimension(1024, 600));
        setPreferredSize(new java.awt.Dimension(1024, 600));

        controlPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Controls"));
        controlPanel.setMaximumSize(new java.awt.Dimension(201, 286));
        controlPanel.setMinimumSize(new java.awt.Dimension(201, 286));
        controlPanel.setPreferredSize(new java.awt.Dimension(201, 286));

        preFilterScroll.setBorder(javax.swing.BorderFactory.createTitledBorder("Pre-Filters"));
        preFilterScroll.setMinimumSize(new java.awt.Dimension(290, 90));

        preFilterPanel.setMinimumSize(new java.awt.Dimension(290, 200));
        preFilterPanel.setPreferredSize(new java.awt.Dimension(290, 200));

        javax.swing.GroupLayout preFilterPanelLayout = new javax.swing.GroupLayout(preFilterPanel);
        preFilterPanel.setLayout(preFilterPanelLayout);
        preFilterPanelLayout.setHorizontalGroup(
            preFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 313, Short.MAX_VALUE)
        );
        preFilterPanelLayout.setVerticalGroup(
            preFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 212, Short.MAX_VALUE)
        );

        preFilterScroll.setViewportView(preFilterPanel);

        segmentationScoll.setBorder(javax.swing.BorderFactory.createTitledBorder("Segmentation"));
        segmentationScoll.setMinimumSize(new java.awt.Dimension(290, 90));

        segmentationPanel.setMinimumSize(new java.awt.Dimension(290, 90));
        segmentationPanel.setPreferredSize(new java.awt.Dimension(290, 90));

        javax.swing.GroupLayout segmentationPanelLayout = new javax.swing.GroupLayout(segmentationPanel);
        segmentationPanel.setLayout(segmentationPanelLayout);
        segmentationPanelLayout.setHorizontalGroup(
            segmentationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 297, Short.MAX_VALUE)
        );
        segmentationPanelLayout.setVerticalGroup(
            segmentationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 90, Short.MAX_VALUE)
        );

        segmentationScoll.setViewportView(segmentationPanel);

        postFilterScroll.setBorder(javax.swing.BorderFactory.createTitledBorder("Post-Filters"));
        postFilterScroll.setMinimumSize(new java.awt.Dimension(290, 200));

        postFilterPanel.setMinimumSize(new java.awt.Dimension(290, 250));
        postFilterPanel.setPreferredSize(new java.awt.Dimension(290, 250));

        javax.swing.GroupLayout postFilterPanelLayout = new javax.swing.GroupLayout(postFilterPanel);
        postFilterPanel.setLayout(postFilterPanelLayout);
        postFilterPanelLayout.setHorizontalGroup(
            postFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 297, Short.MAX_VALUE)
        );
        postFilterPanelLayout.setVerticalGroup(
            postFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 250, Short.MAX_VALUE)
        );

        postFilterScroll.setViewportView(postFilterPanel);

        editPanel.setMinimumSize(new java.awt.Dimension(430, 574));
        editPanel.setPreferredSize(new java.awt.Dimension(430, 574));

        javax.swing.GroupLayout editPanelLayout = new javax.swing.GroupLayout(editPanel);
        editPanel.setLayout(editPanelLayout);
        editPanelLayout.setHorizontalGroup(
            editPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 471, Short.MAX_VALUE)
        );
        editPanelLayout.setVerticalGroup(
            editPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 575, Short.MAX_VALUE)
        );

        editScroll.setViewportView(editPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(controlPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(preFilterScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE)
                    .addComponent(segmentationScoll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(postFilterScroll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 473, Short.MAX_VALUE)
                .addGap(11, 11, 11))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(editScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(11, 11, 11))
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(controlPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(250, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(preFilterScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(segmentationScoll, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(postFilterScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JPanel controlPanel;
    public javax.swing.JPanel editPanel;
    private javax.swing.JScrollPane editScroll;
    public javax.swing.JPanel postFilterPanel;
    private javax.swing.JScrollPane postFilterScroll;
    public javax.swing.JPanel preFilterPanel;
    private javax.swing.JScrollPane preFilterScroll;
    public javax.swing.JPanel segmentationPanel;
    private javax.swing.JScrollPane segmentationScoll;
    // End of variables declaration//GEN-END:variables


    
}
